{"macro_NPzPxvaI":{"name":"qa_complex_macro","macroId":"macro_NPzPxvaI","macroType":"query","definition":"\n\nwith all_values as (\n    select distinct {{column_name_int}} as col_int from {{model}}\n),\npayments_validation_errors as (\n    select\n        col_int\n    from all_values\n    where col_int not in (\n        {% for accepted_value in accepted_values %}\n            {% if accepted_value >= 5 %}\n            5\n            {% else %}\n            {{ accepted_value }}\n            {% endif %}\n            {% if not loop.last %},{% endif %}\n        {% endfor %}\n    )\n)\nselect * from payments_validation_errors","parameters":{"type":"record","fields":[{"name":"model","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"column_name_int","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"accepted_values","kind":{"type":"unknown","value":"[1, 2]"},"optional":true,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_XT7azSZt":{"name":"qa_test_relationship","macroId":"macro_XT7azSZt","macroType":"query","definition":"\nselect count(*)\nfrom (\n    select {{ model1_col }} as id from {{ model }}\n) as child\nleft join (\n    select {{ model2_col }} as id from {{ model2 }}\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null","parameters":{"type":"record","fields":[{"name":"model1","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"model2","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"model1_col","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"model2_col","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_A3UZeo5X":{"name":"qa_all_not_null","macroId":"macro_A3UZeo5X","macroType":"query","definition":"\n\nselect * from {{ model }} where {{ column_name }} is not null","parameters":{"type":"record","fields":[{"name":"model","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"column_name","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_okENKOox":{"name":"qa_all_null","macroId":"macro_okENKOox","macroType":"query","definition":"\n\nselect * from {{ model }} where {{ column_name }} is not null","parameters":{"type":"record","fields":[{"name":"model","kind":{"type":"unknown","value":"'customers'"},"optional":true,"isWorkflowNodeConfiguration":false},{"name":"column_name","kind":{"type":"unknown","value":"'id'"},"optional":true,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_iVzg8vQT":{"name":"qa_epl_data_macro","macroId":"macro_iVzg8vQT","macroType":"query","definition":"\n{% set status = ['HomeTeam','AwayTeam'] %}\n\nwith summary as (\n{% for club in football_clubs %}\n    {% for st in status %}\n    select \n        {{ st }} as team,\n        {% if st == 'HomeTeam' %}\n                case \n                    when FTR = 'H' then 3\n                    when FTR = 'D' then 1\n                    else 0 end points\n        {% else %}\n                case \n                    when FTR = 'A' then 3\n                    when FTR = 'D' then 1\n                    else 0 end points\n        {% endif %}\n    from {{ source('staging', 'english-premier-league-table') }}\n    where season = 'season-1819'\n        and {{ st }} = '{{ club }}'\n        {% if not loop.last %} UNION ALL {% endif %}\n    {% endfor %}\n    {% if not loop.last %} UNION ALL {% endif %}\n{% endfor %}\n)\n\n\nselect \n    team, \n    sum(points) as total_points\nfrom summary\ngroup by team\norder by total_points desc","parameters":{"type":"record","fields":[{"name":"football_clubs","kind":{"type":"unknown","value":"['Man United', 'Liverpool', 'Man City']"},"optional":true,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_VFjJMCC5":{"name":"qa_model_all_above_given_id","macroId":"macro_VFjJMCC5","macroType":"query","definition":"\n\nSELECT * from {{model}} where {{col}} > {{ id_min }}","parameters":{"type":"record","fields":[{"name":"model","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"col","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"id_min","kind":{"type":"unknown","value":"2"},"optional":true,"isWorkflowNodeConfiguration":false}]},"staleState":"none"},"macro_NYoStTUi":{"name":"qa_get_unique_count","macroId":"macro_NYoStTUi","macroType":"query","definition":"\n\nselect count(*)\nfrom (\n    select\n        {{ column_name }}\n    from {{ model }}\n    where {{ column_name }} is not null\n    group by {{ column_name }}\n    having count(*) >= 1\n) validation_errors","parameters":{"type":"record","fields":[{"name":"model","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false},{"name":"column_name","kind":{"type":"unknown"},"optional":false,"isWorkflowNodeConfiguration":false}]},"staleState":"none"}}