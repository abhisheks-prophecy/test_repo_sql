{
  "id" : "tpcds_1_env_uitesting_shared",
  "metainfo" : {
    "label" : "tpcds_1_env_uitesting_shared",
    "autoLayout" : true,
    "staleState" : "none",
    "sourceSuggestions" : {
      "sources" : [ ]
    },
    "graphConfig" : {
      "userDefinedConfig" : {
        "vars" : { }
      }
    }
  },
  "processes" : {
    "Join_4##hkZ0HLrg" : {
      "id" : "Join_4##hkZ0HLrg",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_4",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.\"SUM(SS_QUANTITY)\" != in1.W_WAREHOUSE_SQ_FT"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in1.W_WAREHOUSE_NAME"
          },
          "alias" : "W_WAREHOUSE_NAME"
        }, {
          "expression" : {
            "expression" : "in1.W_WAREHOUSE_SQ_FT"
          },
          "alias" : "W_WAREHOUSE_SQ_FT"
        }, {
          "expression" : {
            "expression" : "in1.JAN_SALES"
          },
          "alias" : "JAN_SALES"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "kgloUmk5",
          "slug" : "in0"
        }, {
          "id" : "S04RnEx0",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "ZgiuTbSN",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_4##Fwv0JNW0" : {
      "id" : "SQLStatement_4##Fwv0JNW0",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_4",
        "phase" : 0
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "WITH SQLStatement_4 AS (\n\n  WITH SQLStatement_4_1 AS (\n  \n    WITH ssales AS (\n    \n      SELECT \n        c_last_name,\n        c_first_name,\n        s_store_name,\n        ca_state,\n        s_state,\n        i_color,\n        i_current_price,\n        i_manager_id,\n        i_units,\n        i_size,\n        sum(ss_net_paid_inc_tax) AS netpaid\n      \n      FROM store_sales, store_returns, store, item, customer, customer_address\n      \n      WHERE ss_ticket_number = sr_ticket_number and ss_item_sk = sr_item_sk and ss_customer_sk = c_customer_sk and ss_item_sk = i_item_sk and ss_store_sk = s_store_sk and c_current_addr_sk = ca_address_sk and c_birth_country <> upper(ca_country) and s_zip = ca_zip and s_market_id = 8\n      \n      GROUP BY \n        c_last_name, c_first_name, s_store_name, ca_state, s_state, i_color, i_current_price, i_manager_id, i_units, i_size\n    \n    )\n    \n    SELECT \n      c_last_name,\n      c_first_name,\n      s_store_name,\n      sum(netpaid) AS paid\n    \n    FROM ssales\n    \n    WHERE i_color = 'cornsilk'\n    \n    GROUP BY \n      c_last_name, c_first_name, s_store_name\n    \n    HAVING sum(netpaid) > (\n      SELECT 0.05 * avg(netpaid)\n      \n      FROM ssales\n     )\n    \n    ORDER BY c_last_name, c_first_name, s_store_name\n  \n  )\n  \n  SELECT *\n  \n  FROM SQLStatement_4_1\n\n)\n\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "Mc1aeEl6",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_3##EaSQSrfw" : {
      "id" : "SQLStatement_3##EaSQSrfw",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_3",
        "phase" : 0
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "WITH SQLStatement_3 AS (\n\n  WITH SQLStatement_3_1 AS (\n  \n    WITH ssr AS (\n    \n      SELECT \n        s_store_id,\n        sum(sales_price) AS sales,\n        sum(profit) AS profit,\n        sum(return_amt) AS returns,\n        sum(net_loss) AS profit_loss\n      \n      FROM (\n        SELECT \n          ss_store_sk AS store_sk,\n          ss_sold_date_sk AS date_sk,\n          ss_ext_sales_price AS sales_price,\n          ss_net_profit AS profit,\n          CAST(0 AS decimal (7, 2)) AS return_amt,\n          CAST(0 AS decimal (7, 2)) AS net_loss\n        \n        FROM store_sales\n        \n        UNION ALL\n        \n        SELECT \n          sr_store_sk AS store_sk,\n          sr_returned_date_sk AS date_sk,\n          CAST(0 AS decimal (7, 2)) AS sales_price,\n          CAST(0 AS decimal (7, 2)) AS profit,\n          sr_return_amt AS return_amt,\n          sr_net_loss AS net_loss\n        \n        FROM store_returns\n       ) AS salesreturns, date_dim, store\n      \n      WHERE date_sk = d_date_sk and d_date BETWEEN CAST('2002-08-09' AS date) and dateadd(DAY, 14, CAST('2002-08-09' AS date)) and store_sk = s_store_sk\n      \n      GROUP BY s_store_id\n    \n    ),\n    \n    csr AS (\n    \n      SELECT \n        cp_catalog_page_id,\n        sum(sales_price) AS sales,\n        sum(profit) AS profit,\n        sum(return_amt) AS returns,\n        sum(net_loss) AS profit_loss\n      \n      FROM (\n        SELECT \n          cs_catalog_page_sk AS page_sk,\n          cs_sold_date_sk AS date_sk,\n          cs_ext_sales_price AS sales_price,\n          cs_net_profit AS profit,\n          CAST(0 AS decimal (7, 2)) AS return_amt,\n          CAST(0 AS decimal (7, 2)) AS net_loss\n        \n        FROM catalog_sales\n        \n        UNION ALL\n        \n        SELECT \n          cr_catalog_page_sk AS page_sk,\n          cr_returned_date_sk AS date_sk,\n          CAST(0 AS decimal (7, 2)) AS sales_price,\n          CAST(0 AS decimal (7, 2)) AS profit,\n          cr_return_amount AS return_amt,\n          cr_net_loss AS net_loss\n        \n        FROM catalog_returns\n       ) AS salesreturns, date_dim, catalog_page\n      \n      WHERE date_sk = d_date_sk and d_date BETWEEN CAST('2002-08-09' AS date) and dateadd(DAY, 14, CAST('2002-08-09' AS date)) and page_sk = cp_catalog_page_sk\n      \n      GROUP BY cp_catalog_page_id\n    \n    ),\n    \n    wsr AS (\n    \n      SELECT \n        web_site_id,\n        sum(sales_price) AS sales,\n        sum(profit) AS profit,\n        sum(return_amt) AS returns,\n        sum(net_loss) AS profit_loss\n      \n      FROM (\n        SELECT \n          ws_web_site_sk AS wsr_web_site_sk,\n          ws_sold_date_sk AS date_sk,\n          ws_ext_sales_price AS sales_price,\n          ws_net_profit AS profit,\n          CAST(0 AS decimal (7, 2)) AS return_amt,\n          CAST(0 AS decimal (7, 2)) AS net_loss\n        \n        FROM web_sales\n        \n        UNION ALL\n        \n        SELECT \n          ws_web_site_sk AS wsr_web_site_sk,\n          wr_returned_date_sk AS date_sk,\n          CAST(0 AS decimal (7, 2)) AS sales_price,\n          CAST(0 AS decimal (7, 2)) AS profit,\n          wr_return_amt AS return_amt,\n          wr_net_loss AS net_loss\n        \n        FROM web_returns\n        LEFT JOIN web_sales\n           ON (wr_item_sk = ws_item_sk and wr_order_number = ws_order_number)\n       ) AS salesreturns, date_dim, web_site\n      \n      WHERE date_sk = d_date_sk and d_date BETWEEN CAST('2002-08-09' AS date) and dateadd(DAY, 14, CAST('2002-08-09' AS date)) and wsr_web_site_sk = web_site_sk\n      \n      GROUP BY web_site_id\n    \n    )\n    \n    SELECT \n      channel,\n      id,\n      sum(sales) AS sales,\n      sum(returns) AS returns,\n      sum(profit) AS profit\n    \n    FROM (\n      SELECT \n        'store channel' AS channel,\n        'store' || s_store_id AS id,\n        sales,\n        returns,\n        (profit - profit_loss) AS profit\n      \n      FROM ssr\n      \n      UNION ALL\n      \n      SELECT \n        'catalog channel' AS channel,\n        'catalog_page' || cp_catalog_page_id AS id,\n        sales,\n        returns,\n        (profit - profit_loss) AS profit\n      \n      FROM csr\n      \n      UNION ALL\n      \n      SELECT \n        'web channel' AS channel,\n        'web_site' || web_site_id AS id,\n        sales,\n        returns,\n        (profit - profit_loss) AS profit\n      \n      FROM wsr\n     ) AS x\n    \n    GROUP BY ROLLUP(channel, id)\n    \n    ORDER BY channel, id\n    \n    LIMIT 100\n  \n  )\n  \n  SELECT *\n  \n  FROM SQLStatement_3_1\n\n)\n\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "x8vRSAgH",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_3##HiBHTr04" : {
      "id" : "Join_3##HiBHTr04",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_3",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.C_LAST_NAME != in1.CA_COUNTY"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.C_LAST_NAME"
          },
          "alias" : "C_LAST_NAME"
        }, {
          "expression" : {
            "expression" : "in0.PAID"
          },
          "alias" : "PAID"
        }, {
          "expression" : {
            "expression" : "in1.D_YEAR"
          },
          "alias" : "D_YEAR"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "sOIuURWw",
          "slug" : "in0"
        }, {
          "id" : "D8liR1JQ",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "cQAfdIzG",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_7##hKCKH1LM" : {
      "id" : "SQLStatement_7##hKCKH1LM",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_7",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "SELECT sum(ss_quantity)\n\nFROM store_sales, store, customer_demographics, customer_address, date_dim\n\nWHERE s_store_sk = ss_store_sk and  ss_sold_date_sk = d_date_sk and d_year = 2001 and  \n       ((cd_demo_sk = ss_cdemo_sk and \n         cd_marital_status = 'D' and \n         cd_education_status = 'Secondary' and \n         ss_sales_price BETWEEN 100.0 and 150.0) or\n        (cd_demo_sk = ss_cdemo_sk and \n         cd_marital_status = 'W' and \n         cd_education_status = '2 yr Degree' and \n         ss_sales_price BETWEEN 50.0 and 100.0) or \n       (cd_demo_sk = ss_cdemo_sk and \n         cd_marital_status = 'U' and \n         cd_education_status = 'Unknown' and \n         ss_sales_price BETWEEN 150.0 and 200.0)) and\n       ((ss_addr_sk = ca_address_sk and\n        ca_country = 'United States' and\n        ca_state IN ('VA', 'MI', 'FL') and ss_net_profit BETWEEN 0 and 2000) or\n        (ss_addr_sk = ca_address_sk and\n        ca_country = 'United States' and\n        ca_state IN ('SC', 'GA', 'MN') and ss_net_profit BETWEEN 150 and 3000) or\n        (ss_addr_sk = ca_address_sk and\n        ca_country = 'United States' and\n        ca_state IN ('OK', 'IA', 'TX') and ss_net_profit BETWEEN 50 and 25000))\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "msWcEQkw",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "tpcds_1_env_uitesting_shared##zKOG9hXn" : {
      "id" : "tpcds_1_env_uitesting_shared##zKOG9hXn",
      "component" : "TargetModel",
      "metadata" : {
        "label" : "tpcds_1_env_uitesting_shared",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "customQueryDisabled" : true,
        "customQuery" : false,
        "incrementalEditorDisabled" : true,
        "query" : "SELECT * \n\nFROM Join_7\n",
        "incrementalKey" : false,
        "incremental" : {
          "expression" : "true"
        }
      },
      "ports" : {
        "inputs" : [ {
          "id" : "VDRa2H0M",
          "slug" : "Join_7"
        } ],
        "outputs" : [ {
          "id" : "tBhGbrj0",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_1##NSX88QV0" : {
      "id" : "SQLStatement_1##NSX88QV0",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_1",
        "phase" : 0
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "WITH SQLStatement_1 AS (\n\n  WITH SQLStatement_1_1 AS (\n  \n    WITH wscs AS (\n    \n      SELECT \n        sold_date_sk,\n        sales_price\n      \n      FROM (\n        SELECT \n          ws_sold_date_sk AS sold_date_sk,\n          ws_ext_sales_price AS sales_price\n        \n        FROM web_sales\n        \n        UNION ALL\n        \n        SELECT \n          cs_sold_date_sk AS sold_date_sk,\n          cs_ext_sales_price AS sales_price\n        \n        FROM catalog_sales\n       ) AS x\n    \n    ),\n    \n    wswscs AS (\n    \n      SELECT \n        d_week_seq,\n        sum(CASE\n          WHEN (d_day_name = 'Sunday')\n            THEN sales_price\n          ELSE NULL\n        END) AS sun_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Monday')\n            THEN sales_price\n          ELSE NULL\n        END) AS mon_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Tuesday')\n            THEN sales_price\n          ELSE NULL\n        END) AS tue_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Wednesday')\n            THEN sales_price\n          ELSE NULL\n        END) AS wed_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Thursday')\n            THEN sales_price\n          ELSE NULL\n        END) AS thu_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Friday')\n            THEN sales_price\n          ELSE NULL\n        END) AS fri_sales,\n        sum(CASE\n          WHEN (d_day_name = 'Saturday')\n            THEN sales_price\n          ELSE NULL\n        END) AS sat_sales\n      \n      FROM wscs, date_dim\n      \n      WHERE d_date_sk = sold_date_sk\n      \n      GROUP BY d_week_seq\n    \n    )\n    \n    SELECT \n      d_week_seq1,\n      round(sun_sales1 / sun_sales2, 2),\n      round(mon_sales1 / mon_sales2, 2),\n      round(tue_sales1 / tue_sales2, 2),\n      round(wed_sales1 / wed_sales2, 2),\n      round(thu_sales1 / thu_sales2, 2),\n      round(fri_sales1 / fri_sales2, 2),\n      round(sat_sales1 / sat_sales2, 2)\n    \n    FROM (\n      SELECT \n        wswscs.d_week_seq AS d_week_seq1,\n        sun_sales AS sun_sales1,\n        mon_sales AS mon_sales1,\n        tue_sales AS tue_sales1,\n        wed_sales AS wed_sales1,\n        thu_sales AS thu_sales1,\n        fri_sales AS fri_sales1,\n        sat_sales AS sat_sales1\n      \n      FROM wswscs, date_dim\n      \n      WHERE date_dim.d_week_seq = wswscs.d_week_seq and\n                                    d_year = 1999\n     ) AS y, (\n      SELECT \n        wswscs.d_week_seq AS d_week_seq2,\n        sun_sales AS sun_sales2,\n        mon_sales AS mon_sales2,\n        tue_sales AS tue_sales2,\n        wed_sales AS wed_sales2,\n        thu_sales AS thu_sales2,\n        fri_sales AS fri_sales2,\n        sat_sales AS sat_sales2\n      \n      FROM wswscs, date_dim\n      \n      WHERE date_dim.d_week_seq = wswscs.d_week_seq and\n                                    d_year = 1999 + 1\n     ) AS z\n    \n    WHERE d_week_seq1 = d_week_seq2 - 53\n    \n    ORDER BY d_week_seq1\n  \n  )\n  \n  SELECT *\n  \n  FROM SQLStatement_1_1\n\n)\n\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "tm2a6Stp",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_6##sAEKBWAD" : {
      "id" : "SQLStatement_6##sAEKBWAD",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_6",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "SELECT \n  w_warehouse_name,\n  w_warehouse_sq_ft,\n  w_city,\n  w_county,\n  w_state,\n  w_country,\n  ship_carriers,\n  year,\n  sum(jan_sales) AS jan_sales,\n  sum(feb_sales) AS feb_sales,\n  sum(mar_sales) AS mar_sales,\n  sum(apr_sales) AS apr_sales,\n  sum(may_sales) AS may_sales,\n  sum(jun_sales) AS jun_sales,\n  sum(jul_sales) AS jul_sales,\n  sum(aug_sales) AS aug_sales,\n  sum(sep_sales) AS sep_sales,\n  sum(oct_sales) AS oct_sales,\n  sum(nov_sales) AS nov_sales,\n  sum(dec_sales) AS dec_sales,\n  sum(jan_sales / w_warehouse_sq_ft) AS jan_sales_per_sq_foot,\n  sum(feb_sales / w_warehouse_sq_ft) AS feb_sales_per_sq_foot,\n  sum(mar_sales / w_warehouse_sq_ft) AS mar_sales_per_sq_foot,\n  sum(apr_sales / w_warehouse_sq_ft) AS apr_sales_per_sq_foot,\n  sum(may_sales / w_warehouse_sq_ft) AS may_sales_per_sq_foot,\n  sum(jun_sales / w_warehouse_sq_ft) AS jun_sales_per_sq_foot,\n  sum(jul_sales / w_warehouse_sq_ft) AS jul_sales_per_sq_foot,\n  sum(aug_sales / w_warehouse_sq_ft) AS aug_sales_per_sq_foot,\n  sum(sep_sales / w_warehouse_sq_ft) AS sep_sales_per_sq_foot,\n  sum(oct_sales / w_warehouse_sq_ft) AS oct_sales_per_sq_foot,\n  sum(nov_sales / w_warehouse_sq_ft) AS nov_sales_per_sq_foot,\n  sum(dec_sales / w_warehouse_sq_ft) AS dec_sales_per_sq_foot,\n  sum(jan_net) AS jan_net,\n  sum(feb_net) AS feb_net,\n  sum(mar_net) AS mar_net,\n  sum(apr_net) AS apr_net,\n  sum(may_net) AS may_net,\n  sum(jun_net) AS jun_net,\n  sum(jul_net) AS jul_net,\n  sum(aug_net) AS aug_net,\n  sum(sep_net) AS sep_net,\n  sum(oct_net) AS oct_net,\n  sum(nov_net) AS nov_net,\n  sum(dec_net) AS dec_net\n\nFROM (\n  SELECT \n    w_warehouse_name,\n    w_warehouse_sq_ft,\n    w_city,\n    w_county,\n    w_state,\n    w_country,\n    'GREAT EASTERN' || ',' || 'UPS' AS ship_carriers,\n    d_year AS year,\n    sum(CASE\n      WHEN d_moy = 1\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS jan_sales,\n    sum(CASE\n      WHEN d_moy = 2\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS feb_sales,\n    sum(CASE\n      WHEN d_moy = 3\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS mar_sales,\n    sum(CASE\n      WHEN d_moy = 4\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS apr_sales,\n    sum(CASE\n      WHEN d_moy = 5\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS may_sales,\n    sum(CASE\n      WHEN d_moy = 6\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS jun_sales,\n    sum(CASE\n      WHEN d_moy = 7\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS jul_sales,\n    sum(CASE\n      WHEN d_moy = 8\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS aug_sales,\n    sum(CASE\n      WHEN d_moy = 9\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS sep_sales,\n    sum(CASE\n      WHEN d_moy = 10\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS oct_sales,\n    sum(CASE\n      WHEN d_moy = 11\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS nov_sales,\n    sum(CASE\n      WHEN d_moy = 12\n        THEN ws_ext_sales_price * ws_quantity\n      ELSE 0\n    END) AS dec_sales,\n    sum(CASE\n      WHEN d_moy = 1\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS jan_net,\n    sum(CASE\n      WHEN d_moy = 2\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS feb_net,\n    sum(CASE\n      WHEN d_moy = 3\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS mar_net,\n    sum(CASE\n      WHEN d_moy = 4\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS apr_net,\n    sum(CASE\n      WHEN d_moy = 5\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS may_net,\n    sum(CASE\n      WHEN d_moy = 6\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS jun_net,\n    sum(CASE\n      WHEN d_moy = 7\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS jul_net,\n    sum(CASE\n      WHEN d_moy = 8\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS aug_net,\n    sum(CASE\n      WHEN d_moy = 9\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS sep_net,\n    sum(CASE\n      WHEN d_moy = 10\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS oct_net,\n    sum(CASE\n      WHEN d_moy = 11\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS nov_net,\n    sum(CASE\n      WHEN d_moy = 12\n        THEN ws_net_paid * ws_quantity\n      ELSE 0\n    END) AS dec_net\n  \n  FROM web_sales, warehouse, date_dim, time_dim, ship_mode\n  \n  WHERE ws_warehouse_sk = w_warehouse_sk and ws_sold_date_sk = d_date_sk and ws_sold_time_sk = t_time_sk and ws_ship_mode_sk = sm_ship_mode_sk and d_year = 1998 and t_time BETWEEN 46866 and 46866 + 28800 and sm_carrier IN ('GREAT EASTERN', 'UPS')\n  \n  GROUP BY \n    w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, d_year\n  \n  UNION ALL\n  \n  SELECT \n    w_warehouse_name,\n    w_warehouse_sq_ft,\n    w_city,\n    w_county,\n    w_state,\n    w_country,\n    'GREAT EASTERN' || ',' || 'UPS' AS ship_carriers,\n    d_year AS year,\n    sum(CASE\n      WHEN d_moy = 1\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS jan_sales,\n    sum(CASE\n      WHEN d_moy = 2\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS feb_sales,\n    sum(CASE\n      WHEN d_moy = 3\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS mar_sales,\n    sum(CASE\n      WHEN d_moy = 4\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS apr_sales,\n    sum(CASE\n      WHEN d_moy = 5\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS may_sales,\n    sum(CASE\n      WHEN d_moy = 6\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS jun_sales,\n    sum(CASE\n      WHEN d_moy = 7\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS jul_sales,\n    sum(CASE\n      WHEN d_moy = 8\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS aug_sales,\n    sum(CASE\n      WHEN d_moy = 9\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS sep_sales,\n    sum(CASE\n      WHEN d_moy = 10\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS oct_sales,\n    sum(CASE\n      WHEN d_moy = 11\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS nov_sales,\n    sum(CASE\n      WHEN d_moy = 12\n        THEN cs_sales_price * cs_quantity\n      ELSE 0\n    END) AS dec_sales,\n    sum(CASE\n      WHEN d_moy = 1\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS jan_net,\n    sum(CASE\n      WHEN d_moy = 2\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS feb_net,\n    sum(CASE\n      WHEN d_moy = 3\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS mar_net,\n    sum(CASE\n      WHEN d_moy = 4\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS apr_net,\n    sum(CASE\n      WHEN d_moy = 5\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS may_net,\n    sum(CASE\n      WHEN d_moy = 6\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS jun_net,\n    sum(CASE\n      WHEN d_moy = 7\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS jul_net,\n    sum(CASE\n      WHEN d_moy = 8\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS aug_net,\n    sum(CASE\n      WHEN d_moy = 9\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS sep_net,\n    sum(CASE\n      WHEN d_moy = 10\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS oct_net,\n    sum(CASE\n      WHEN d_moy = 11\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS nov_net,\n    sum(CASE\n      WHEN d_moy = 12\n        THEN cs_net_paid * cs_quantity\n      ELSE 0\n    END) AS dec_net\n  \n  FROM catalog_sales, warehouse, date_dim, time_dim, ship_mode\n  \n  WHERE cs_warehouse_sk = w_warehouse_sk and cs_sold_date_sk = d_date_sk and cs_sold_time_sk = t_time_sk and cs_ship_mode_sk = sm_ship_mode_sk and d_year = 1998 and t_time BETWEEN 46866 and 46866 + 28800 and sm_carrier IN ('GREAT EASTERN', 'UPS')\n  \n  GROUP BY \n    w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, d_year\n ) AS x\n\nGROUP BY \n  w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, ship_carriers, year\n\nORDER BY w_warehouse_name\n\nLIMIT 100\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "i0d0R7a6",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_7##dJiMVkPg" : {
      "id" : "Join_7##dJiMVkPg",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_7",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.CUSTOMER_ID != in1.W_WAREHOUSE_NAME"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.CUSTOMER_ID"
          },
          "alias" : "CUSTOMER_ID"
        }, {
          "expression" : {
            "expression" : "in0.CUSTOMER_FIRST_NAME"
          },
          "alias" : "CUSTOMER_FIRST_NAME"
        }, {
          "expression" : {
            "expression" : "in1.D_YEAR"
          },
          "alias" : "D_YEAR"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "x8P9dZl2",
          "slug" : "in0"
        }, {
          "id" : "uLUVDrJl",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "YJWHjED0",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_2##cVNuCCkH" : {
      "id" : "SQLStatement_2##cVNuCCkH",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_2",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "SELECT \n  s_store_name,\n  sum(ss_net_profit)\n\nFROM store_sales, date_dim, store, (\n  SELECT ca_zip\n  \n  FROM (\n    SELECT substr(ca_zip, 1, 5) AS ca_zip\n    \n    FROM customer_address\n    \n    WHERE substr(ca_zip, 1, 5) IN \n    (  '10338',\n      '56623',\n      '51423',\n      '26456',\n      '19500',\n      '65832',\n      '17178',\n      '68879',\n      '49935',\n      '49849',\n      '93956',\n      '71765',\n      '45100',\n      '50587',\n      '68389',\n      '41899',\n      '98316',\n      '56217',\n      '94686',\n      '59350',\n      '32857',\n      '14925',\n      '31266',\n      '37817',\n      '27519',\n      '20787',\n      '26967',\n      '49045',\n      '39397',\n      '32010',\n      '23144',\n      '53580',\n      '15491',\n      '74151',\n      '18442',\n      '51916',\n      '17730',\n      '22824',\n      '28290',\n      '21657',\n      '45460',\n      '39386',\n      '21133',\n      '35017',\n      '19894',\n      '21759',\n      '79293',\n      '86733',\n      '76777',\n      '41688',\n      '13810',\n      '49053',\n      '17992',\n      '13395',\n      '19869',\n      '40785',\n      '63897',\n      '65049',\n      '27388',\n      '94701',\n      '41482',\n      '97923',\n      '23951',\n      '88284',\n      '61718',\n      '94317',\n      '72294',\n      '63544',\n      '31306',\n      '41242',\n      '28830',\n      '75535',\n      '86189',\n      '88177',\n      '16147',\n      '12902',\n      '48271',\n      '54036',\n      '20936',\n      '27802',\n      '96741',\n      '70286',\n      '75710',\n      '16034',\n      '90285',\n      '22058',\n      '52590',\n      '40584',\n      '62441',\n      '64039',\n      '68999',\n      '64327',\n      '33844',\n      '52497',\n      '88495',\n      '25989',\n      '67814',\n      '13767',\n      '83194',\n      '99395',\n      '35524',\n      '89640',\n      '48834',\n      '51875',\n      '71073',\n      '25383',\n      '19129',\n      '57805',\n      '47962',\n      '61905',\n      '19557',\n      '74159',\n      '98032',\n      '13917',\n      '50936',\n      '47993',\n      '41606',\n      '17592',\n      '11470',\n      '28216',\n      '19732',\n      '97958',\n      '60997',\n      '85688',\n      '96863',\n      '16605',\n      '10898',\n      '31340',\n      '71340',\n      '72902',\n      '98949',\n      '74440',\n      '53057',\n      '30323',\n      '76166',\n      '27195',\n      '11204',\n      '32771',\n      '38189',\n      '83221',\n      '22295',\n      '15325',\n      '20844',\n      '65549',\n      '69207',\n      '71903',\n      '63929',\n      '56922',\n      '25733',\n      '75482',\n      '14986',\n      '79223',\n      '73692',\n      '98769',\n      '70275',\n      '33793',\n      '13057',\n      '30142',\n      '95737',\n      '30072',\n      '32097',\n      '25845',\n      '50282',\n      '19289',\n      '92221',\n      '59533',\n      '37375',\n      '29706',\n      '48186',\n      '22385',\n      '55809',\n      '17416',\n      '10592',\n      '55385',\n      '71829',\n      '91975',\n      '73557',\n      '38036',\n      '10448',\n      '95252',\n      '51386',\n      '14190',\n      '15247',\n      '39907',\n      '79438',\n      '78053',\n      '66623',\n      '27720',\n      '84139',\n      '74147',\n      '58637',\n      '11434',\n      '36573',\n      '10081',\n      '53536',\n      '41724',\n      '97898',\n      '36752',\n      '50384',\n      '87352',\n      '35696',\n      '69486',\n      '50026',\n      '27837',\n      '42592',\n      '58865',\n      '80523',\n      '53682',\n      '65423',\n      '77611',\n      '98529',\n      '13909',\n      '13727',\n      '52190',\n      '36152',\n      '48355',\n      '62496',\n      '16527',\n      '18143',\n      '98830',\n      '75198',\n      '73043',\n      '64043',\n      '63042',\n      '67797',\n      '50656',\n      '27700',\n      '60687',\n      '57905',\n      '94404',\n      '15733',\n      '80809',\n      '74562',\n      '84493',\n      '67977',\n      '11213',\n      '19125',\n      '84496',\n      '16435',\n      '97510',\n      '46040',\n      '33968',\n      '20256',\n      '42332',\n      '16480',\n      '54277',\n      '82819',\n      '93799',\n      '69101',\n      '57689',\n      '42821',\n      '68073',\n      '49342',\n      '46915',\n      '25825',\n      '92332',\n      '20219',\n      '96577',\n      '49463',\n      '19221',\n      '35814',\n      '64783',\n      '97303',\n      '52061',\n      '24357',\n      '58167',\n      '56286',\n      '64474',\n      '99847',\n      '53626',\n      '39703',\n      '24880',\n      '24365',\n      '50652',\n      '29611',\n      '90638',\n      '59246',\n      '27171',\n      '30483',\n      '11708',\n      '38630',\n      '81914',\n      '48269',\n      '11720',\n      '88662',\n      '68844',\n      '54838',\n      '93795',\n      '38102',\n      '33481',\n      '97546',\n      '49306',\n      '97216',\n      '49032',\n      '14270',\n      '72418',\n      '32540',\n      '53208',\n      '15588',\n      '29990',\n      '10407',\n      '92334',\n      '48543',\n      '51495',\n      '77996',\n      '53686',\n      '14827',\n      '30978',\n      '30482',\n      '86296',\n      '48869',\n      '59600',\n      '29495',\n      '24775',\n      '34645',\n      '19763',\n      '98602',\n      '20456',\n      '10468',\n      '13887',\n      '65714',\n      '74740',\n      '37096',\n      '96240',\n      '44111',\n      '54109',\n      '62693',\n      '87874',\n      '64295',\n      '62027',\n      '86027',\n      '54341',\n      '68582',\n      '67809',\n      '44159',\n      '97913',\n      '79150',\n      '38974',\n      '64754',\n      '73946',\n      '20840',\n      '16138',\n      '58939',\n      '20428',\n      '19890',\n      '70842',\n      '78648',\n      '55576',\n      '37267',\n      '40470',\n      '12957',\n      '57553',\n      '53593',\n      '34067',\n      '22555',\n      '79719',\n      '25809',\n      '28496',\n      '11083',\n      '87624',\n      '83622',\n      '84898',\n      '28678',\n      '14297',\n      '79461',\n      '22910',\n      '87129',\n      '49941',\n      '64817',\n      '93905',\n      '39721',\n      '81837',\n      '18753',\n      '86432',\n      '67821',\n      '66080',\n      '28246',\n      '13466',\n      '16363',\n      '56950',\n      '35446',\n      '58326',\n      '11760',\n      '33962',\n      '28399',\n      '45848',\n      '52560',\n      '66894',\n      '15169',\n      '20988',\n      '85925',\n      '38582',\n      '34825',\n      '94227',\n      '56758',\n      '24801',\n      '14128',\n      '14012',\n      '35824',\n      '49784'\n    )\n    \n    INTERSECT\n    \n    SELECT ca_zip\n    \n    FROM (\n      SELECT \n        substr(ca_zip, 1, 5) AS ca_zip,\n        count(*) AS cnt\n      \n      FROM customer_address, customer\n      \n      WHERE ca_address_sk = c_current_addr_sk and\n                                                            c_preferred_cust_flag = 'Y'\n      \n      GROUP BY ca_zip\n      \n      HAVING count(*) > 10\n     ) AS A1\n   ) AS A2\n ) AS V1\n\nWHERE ss_store_sk = s_store_sk and ss_sold_date_sk = d_date_sk and d_qoy = 1 and d_year = 2002 and (substr(s_zip, 1, 2) = substr(V1.ca_zip, 1, 2))\n\nGROUP BY s_store_name\n\nORDER BY s_store_name\n\nLIMIT 100\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "u2sH6c0G",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_0##eSDMSyXh" : {
      "id" : "SQLStatement_0##eSDMSyXh",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_0",
        "phase" : 0
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "WITH SQLStatement_0 AS (\n\n  WITH year_total AS (\n  \n    SELECT \n      c_customer_id AS customer_id,\n      c_first_name AS customer_first_name,\n      c_last_name AS customer_last_name,\n      c_preferred_cust_flag AS customer_preferred_cust_flag,\n      c_birth_country AS customer_birth_country,\n      c_login AS customer_login,\n      c_email_address AS customer_email_address,\n      d_year AS dyear,\n      sum(((ss_ext_list_price - ss_ext_wholesale_cost - ss_ext_discount_amt) + ss_ext_sales_price) / 2) AS year_total,\n      's' AS sale_type\n    \n    FROM customer, store_sales, date_dim\n    \n    WHERE c_customer_sk = ss_customer_sk and ss_sold_date_sk = d_date_sk\n    \n    GROUP BY \n      c_customer_id, \n      c_first_name, \n      c_last_name, \n      c_preferred_cust_flag, \n      c_birth_country, \n      c_login, \n      c_email_address, \n      d_year\n    \n    UNION ALL\n    \n    SELECT \n      c_customer_id AS customer_id,\n      c_first_name AS customer_first_name,\n      c_last_name AS customer_last_name,\n      c_preferred_cust_flag AS customer_preferred_cust_flag,\n      c_birth_country AS customer_birth_country,\n      c_login AS customer_login,\n      c_email_address AS customer_email_address,\n      d_year AS dyear,\n      sum((((cs_ext_list_price - cs_ext_wholesale_cost - cs_ext_discount_amt) + cs_ext_sales_price) / 2)) AS year_total,\n      'c' AS sale_type\n    \n    FROM customer, catalog_sales, date_dim\n    \n    WHERE c_customer_sk = cs_bill_customer_sk and cs_sold_date_sk = d_date_sk\n    \n    GROUP BY \n      c_customer_id, \n      c_first_name, \n      c_last_name, \n      c_preferred_cust_flag, \n      c_birth_country, \n      c_login, \n      c_email_address, \n      d_year\n    \n    UNION ALL\n    \n    SELECT \n      c_customer_id AS customer_id,\n      c_first_name AS customer_first_name,\n      c_last_name AS customer_last_name,\n      c_preferred_cust_flag AS customer_preferred_cust_flag,\n      c_birth_country AS customer_birth_country,\n      c_login AS customer_login,\n      c_email_address AS customer_email_address,\n      d_year AS dyear,\n      sum((((ws_ext_list_price - ws_ext_wholesale_cost - ws_ext_discount_amt) + ws_ext_sales_price) / 2)) AS year_total,\n      'w' AS sale_type\n    \n    FROM customer, web_sales, date_dim\n    \n    WHERE c_customer_sk = ws_bill_customer_sk and ws_sold_date_sk = d_date_sk\n    \n    GROUP BY \n      c_customer_id, \n      c_first_name, \n      c_last_name, \n      c_preferred_cust_flag, \n      c_birth_country, \n      c_login, \n      c_email_address, \n      d_year\n  \n  )\n  \n  SELECT \n    t_s_secyear.customer_id,\n    t_s_secyear.customer_first_name,\n    t_s_secyear.customer_last_name,\n    t_s_secyear.customer_login\n  \n  FROM year_total AS t_s_firstyear, year_total AS t_s_secyear, year_total AS t_c_firstyear, year_total AS t_c_secyear, year_total AS t_w_firstyear, year_total AS t_w_secyear\n  \n  WHERE t_s_secyear.customer_id = t_s_firstyear.customer_id and t_s_firstyear.customer_id = t_c_secyear.customer_id and t_s_firstyear.customer_id = t_c_firstyear.customer_id and t_s_firstyear.customer_id = t_w_firstyear.customer_id and t_s_firstyear.customer_id = t_w_secyear.customer_id and t_s_firstyear.sale_type = 's' and t_c_firstyear.sale_type = 'c' and t_w_firstyear.sale_type = 'w' and t_s_secyear.sale_type = 's' and t_c_secyear.sale_type = 'c' and t_w_secyear.sale_type = 'w' and t_s_firstyear.dyear = 1999 and t_s_secyear.dyear = 1999 + 1 and t_c_firstyear.dyear = 1999 and t_c_secyear.dyear = 1999 + 1 and t_w_firstyear.dyear = 1999 and t_w_secyear.dyear = 1999 + 1 and t_s_firstyear.year_total > 0 and t_c_firstyear.year_total > 0 and t_w_firstyear.year_total > 0 and CASE\n    WHEN t_c_firstyear.year_total > 0\n      THEN t_c_secyear.year_total / t_c_firstyear.year_total\n    ELSE NULL\n  END > CASE\n    WHEN t_s_firstyear.year_total > 0\n      THEN t_s_secyear.year_total / t_s_firstyear.year_total\n    ELSE NULL\n  END and CASE\n    WHEN t_c_firstyear.year_total > 0\n      THEN t_c_secyear.year_total / t_c_firstyear.year_total\n    ELSE NULL\n  END > CASE\n    WHEN t_w_firstyear.year_total > 0\n      THEN t_w_secyear.year_total / t_w_firstyear.year_total\n    ELSE NULL\n  END\n  \n  ORDER BY t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login\n  \n  LIMIT 100\n\n)\n\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "SUOCZMTQ",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "SQLStatement_5##fJRPaaub" : {
      "id" : "SQLStatement_5##fJRPaaub",
      "component" : "SQLStatement",
      "metadata" : {
        "label" : "SQLStatement_5",
        "phase" : 0
      },
      "properties" : {
        "fileTabs" : [ {
          "path" : "",
          "id" : "",
          "language" : "sql",
          "content" : "WITH SQLStatement_5 AS (\n\n  WITH SQLStatement_5_1 AS (\n  \n    WITH ss AS (\n    \n      SELECT \n        ca_county,\n        d_qoy,\n        d_year,\n        sum(ss_ext_sales_price) AS store_sales\n      \n      FROM store_sales, date_dim, customer_address\n      \n      WHERE ss_sold_date_sk = d_date_sk and ss_addr_sk = ca_address_sk\n      \n      GROUP BY \n        ca_county, d_qoy, d_year\n    \n    ),\n    \n    ws AS (\n    \n      SELECT \n        ca_county,\n        d_qoy,\n        d_year,\n        sum(ws_ext_sales_price) AS web_sales\n      \n      FROM web_sales, date_dim, customer_address\n      \n      WHERE ws_sold_date_sk = d_date_sk and ws_bill_addr_sk = ca_address_sk\n      \n      GROUP BY \n        ca_county, d_qoy, d_year\n    \n    )\n    \n    SELECT \n      ss1.ca_county,\n      ss1.d_year,\n      ws2.web_sales / ws1.web_sales AS web_q1_q2_increase,\n      ss2.store_sales / ss1.store_sales AS store_q1_q2_increase,\n      ws3.web_sales / ws2.web_sales AS web_q2_q3_increase,\n      ss3.store_sales / ss2.store_sales AS store_q2_q3_increase\n    \n    FROM ss AS ss1, ss AS ss2, ss AS ss3, ws AS ws1, ws AS ws2, ws AS ws3\n    \n    WHERE ss1.d_qoy = 1 and ss1.d_year = 1999 and ss1.ca_county = ss2.ca_county and ss2.d_qoy = 2 and ss2.d_year = 1999 and ss2.ca_county = ss3.ca_county and ss3.d_qoy = 3 and ss3.d_year = 1999 and ss1.ca_county = ws1.ca_county and ws1.d_qoy = 1 and ws1.d_year = 1999 and ws1.ca_county = ws2.ca_county and ws2.d_qoy = 2 and ws2.d_year = 1999 and ws1.ca_county = ws3.ca_county and ws3.d_qoy = 3 and ws3.d_year = 1999 and CASE\n      WHEN ws1.web_sales > 0\n        THEN ws2.web_sales / ws1.web_sales\n      ELSE NULL\n    END > CASE\n      WHEN ss1.store_sales > 0\n        THEN ss2.store_sales / ss1.store_sales\n      ELSE NULL\n    END and CASE\n      WHEN ws2.web_sales > 0\n        THEN ws3.web_sales / ws2.web_sales\n      ELSE NULL\n    END > CASE\n      WHEN ss2.store_sales > 0\n        THEN ss3.store_sales / ss2.store_sales\n      ELSE NULL\n    END\n    \n    ORDER BY web_q1_q2_increase\n  \n  )\n  \n  SELECT *\n  \n  FROM SQLStatement_5_1\n\n)\n\n"
        } ]
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "jK1IQQZm",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_2##wOptsZtQ" : {
      "id" : "Join_2##wOptsZtQ",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_2",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.\"ROUND(FRI_SALES1 / FRI_SALES2, 2)\" != in1.\"SUM(SS_NET_PROFIT)\""
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in1.S_STORE_NAME"
          },
          "alias" : "S_STORE_NAME"
        }, {
          "expression" : {
            "expression" : "in1.\"SUM(SS_NET_PROFIT)\""
          },
          "alias" : "SS_NET_PROFIT"
        }, {
          "expression" : {
            "expression" : "in0.\"ROUND(SUN_SALES1 / SUN_SALES2, 2)\""
          },
          "alias" : "ROUND_SUN_SALES1_SUN_SALES2"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "kc1Qk1l5",
          "slug" : "in0"
        }, {
          "id" : "ATSNEruL",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "OX5wjAWq",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_5##eyeIGd67" : {
      "id" : "Join_5##eyeIGd67",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_5",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.C_LAST_NAME != in1.W_WAREHOUSE_NAME"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "GnBrUr6z",
          "slug" : "in0"
        }, {
          "id" : "qC0ixYM4",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "gSkwRBw0",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_1##cOrb11Ck" : {
      "id" : "Join_1##cOrb11Ck",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_1",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.CUSTOMER_ID != in1.ID"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.CUSTOMER_ID"
          },
          "alias" : "CUSTOMER_ID"
        }, {
          "expression" : {
            "expression" : "in0.CUSTOMER_FIRST_NAME"
          },
          "alias" : "CUSTOMER_FIRST_NAME"
        }, {
          "expression" : {
            "expression" : "in0.CUSTOMER_LAST_NAME"
          },
          "alias" : "CUSTOMER_LAST_NAME"
        }, {
          "expression" : {
            "expression" : "in0.CUSTOMER_LOGIN"
          },
          "alias" : "CUSTOMER_LOGIN"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "Zyn2ph4r",
          "slug" : "in0"
        }, {
          "id" : "ilsYaqlv",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "eXRfpolB",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    },
    "Join_6##S4mKFo1t" : {
      "id" : "Join_6##S4mKFo1t",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_6",
        "phase" : 0,
        "macroDependencies" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "expression" : "in0.CUSTOMER_ID != in1.S_STORE_NAME"
          },
          "joinType" : "INNER"
        } ],
        "expressions" : [ {
          "expression" : {
            "expression" : "in0.CUSTOMER_ID"
          },
          "alias" : "CUSTOMER_ID"
        }, {
          "expression" : {
            "expression" : "in0.CUSTOMER_FIRST_NAME"
          },
          "alias" : "CUSTOMER_FIRST_NAME"
        }, {
          "expression" : {
            "expression" : "in1.SS_NET_PROFIT"
          },
          "alias" : "SUM_SS_NET_PROFIT"
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "ports" : {
        "inputs" : [ {
          "id" : "T5pWvFB9",
          "slug" : "in0"
        }, {
          "id" : "KM7f9WLd",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "pzKDj8qd",
          "slug" : "out"
        } ],
        "isCustomOutputSchema" : false
      }
    }
  },
  "connections" : [ {
    "id" : "hM4Dexye",
    "source" : "SQLStatement_0##eSDMSyXh",
    "sourcePort" : "SUOCZMTQ",
    "target" : "Join_1##cOrb11Ck",
    "targetPort" : "Zyn2ph4r"
  }, {
    "id" : "pyHy6Hzy",
    "source" : "SQLStatement_3##EaSQSrfw",
    "sourcePort" : "x8vRSAgH",
    "target" : "Join_1##cOrb11Ck",
    "targetPort" : "ilsYaqlv"
  }, {
    "id" : "XX8ITFOp",
    "source" : "SQLStatement_1##NSX88QV0",
    "sourcePort" : "tm2a6Stp",
    "target" : "Join_2##wOptsZtQ",
    "targetPort" : "kc1Qk1l5"
  }, {
    "id" : "fI0visPd",
    "source" : "SQLStatement_2##cVNuCCkH",
    "sourcePort" : "u2sH6c0G",
    "target" : "Join_2##wOptsZtQ",
    "targetPort" : "ATSNEruL"
  }, {
    "id" : "KPEZA0MS",
    "source" : "SQLStatement_4##Fwv0JNW0",
    "sourcePort" : "Mc1aeEl6",
    "target" : "Join_3##HiBHTr04",
    "targetPort" : "sOIuURWw"
  }, {
    "id" : "j5uLk1M1",
    "source" : "SQLStatement_5##fJRPaaub",
    "sourcePort" : "jK1IQQZm",
    "target" : "Join_3##HiBHTr04",
    "targetPort" : "D8liR1JQ"
  }, {
    "id" : "BrOVhfN9",
    "source" : "SQLStatement_7##hKCKH1LM",
    "sourcePort" : "msWcEQkw",
    "target" : "Join_4##hkZ0HLrg",
    "targetPort" : "kgloUmk5"
  }, {
    "id" : "KTqk8owv",
    "source" : "SQLStatement_6##sAEKBWAD",
    "sourcePort" : "i0d0R7a6",
    "target" : "Join_4##hkZ0HLrg",
    "targetPort" : "S04RnEx0"
  }, {
    "id" : "OZZah2gQ",
    "source" : "Join_3##HiBHTr04",
    "sourcePort" : "cQAfdIzG",
    "target" : "Join_5##eyeIGd67",
    "targetPort" : "GnBrUr6z"
  }, {
    "id" : "SBXl5MpS",
    "source" : "Join_4##hkZ0HLrg",
    "sourcePort" : "ZgiuTbSN",
    "target" : "Join_5##eyeIGd67",
    "targetPort" : "qC0ixYM4"
  }, {
    "id" : "yB7uu4gJ",
    "source" : "Join_1##cOrb11Ck",
    "sourcePort" : "eXRfpolB",
    "target" : "Join_6##S4mKFo1t",
    "targetPort" : "T5pWvFB9"
  }, {
    "id" : "wW2Aej5l",
    "source" : "Join_2##wOptsZtQ",
    "sourcePort" : "OX5wjAWq",
    "target" : "Join_6##S4mKFo1t",
    "targetPort" : "KM7f9WLd"
  }, {
    "id" : "bLIr50C1",
    "source" : "Join_6##S4mKFo1t",
    "sourcePort" : "pzKDj8qd",
    "target" : "Join_7##dJiMVkPg",
    "targetPort" : "x8P9dZl2"
  }, {
    "id" : "U36NueDx",
    "source" : "Join_5##eyeIGd67",
    "sourcePort" : "gSkwRBw0",
    "target" : "Join_7##dJiMVkPg",
    "targetPort" : "uLUVDrJl"
  }, {
    "id" : "Hwk71dTh",
    "source" : "Join_7##dJiMVkPg",
    "sourcePort" : "YJWHjED0",
    "target" : "tpcds_1_env_uitesting_shared##zKOG9hXn",
    "targetPort" : "VDRa2H0M"
  } ],
  "component" : "Model"
}