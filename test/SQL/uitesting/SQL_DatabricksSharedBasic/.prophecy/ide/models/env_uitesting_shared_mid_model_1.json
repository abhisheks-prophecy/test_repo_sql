{"id":"env_uitesting_shared_mid_model_1","metainfo":{"label":"env_uitesting_shared_mid_model_1","autoLayout":false,"staleState":"none","sourceSuggestions":{"sources":[]},"graphConfig":{"userDefinedConfig":{"vars":{"v_int":"10","v_dict":"{ 'a' : 10, 'b' : 20 }"}}}},"processes":{"raw_customers##Nj8Lrz3U":{"id":"raw_customers##Nj8Lrz3U","component":"Seed","metadata":{"label":"raw_customers","x":120,"y":120,"phase":0},"properties":{"table":{"name":"raw_customers","sourceType":"Seed"}},"ports":{"inputs":[],"outputs":[{"id":"a4xzYLni","schema":{"providerType":"Databricks","fields":[{"name":"id","dataType":{"type":"Integer"}},{"name":"first_name","dataType":{"type":"String"}},{"name":"last_name","dataType":{"type":"String"}}]},"slug":"out"}],"isCustomOutputSchema":false}},"SQLStatement_1##g8AOf2ZC":{"id":"SQLStatement_1##g8AOf2ZC","component":"Filter","metadata":{"label":"SQLStatement_1","x":520,"y":280,"phase":0,"macroDependencies":[]},"properties":{"columnsSelector":["hXdPMEyu##c_tinyint"],"condition":{"expression":"c_tinyint > -1"}},"ports":{"inputs":[{"id":"hXdPMEyu","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"in0"}],"outputs":[{"id":"CyMhxKGt","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"out"}],"isCustomOutputSchema":false}},"env_uitesting_shared_parent_model_1##rGJWQY6v":{"id":"env_uitesting_shared_parent_model_1##rGJWQY6v","component":"Model","metadata":{"label":"env_uitesting_shared_parent_model_1","x":120,"y":380,"phase":0},"properties":{"table":{"name":"env_uitesting_shared_parent_model_1","sourceType":"Model"}},"ports":{"inputs":[],"outputs":[{"id":"hB148f93","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"out"}],"isCustomOutputSchema":false}},"Limit_1##NFPelaWG":{"id":"Limit_1##NFPelaWG","component":"Limit","metadata":{"label":"Limit_1","x":520,"y":480,"phase":0},"properties":{"limit":{"expression":"10"}},"ports":{"inputs":[{"id":"QleFxndB","schema":{"providerType":"Databricks","fields":[{"name":"c_bool_expr","dataType":{"type":"Boolean"}},{"name":"c_concat_expr","dataType":{"type":"String"}},{"name":"c_add_expr","dataType":{"type":"Double"}},{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}},{"name":"c_macro","dataType":{"type":"String"}},{"name":"c_if","dataType":{"type":"String"}},{"name":"cfor_col_0","dataType":{"type":"String"}},{"name":"cfor_col_1","dataType":{"type":"String"}},{"name":"cfor_col_2","dataType":{"type":"String"}},{"name":"cfor_col_3","dataType":{"type":"String"}},{"name":"cfor_col_4","dataType":{"type":"String"}}]},"slug":"in0"}],"outputs":[{"id":"FK7MhYBZ","schema":{"providerType":"Databricks","fields":[{"name":"c_bool_expr","dataType":{"type":"Boolean"}},{"name":"c_concat_expr","dataType":{"type":"String"}},{"name":"c_add_expr","dataType":{"type":"Double"}},{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}},{"name":"c_macro","dataType":{"type":"String"}},{"name":"c_if","dataType":{"type":"String"}},{"name":"cfor_col_0","dataType":{"type":"String"}},{"name":"cfor_col_1","dataType":{"type":"String"}},{"name":"cfor_col_2","dataType":{"type":"String"}},{"name":"cfor_col_3","dataType":{"type":"String"}},{"name":"cfor_col_4","dataType":{"type":"String"}}]},"slug":"out"}],"isCustomOutputSchema":false}},"env_uitesting_shared_mid_model_1##CSwD6x9x":{"id":"env_uitesting_shared_mid_model_1##CSwD6x9x","component":"TargetModel","metadata":{"label":"env_uitesting_shared_mid_model_1","x":920,"y":380,"phase":0,"macroDependencies":[]},"properties":{"customQueryDisabled":true,"customQuery":false,"incrementalEditorDisabled":true,"query":"SELECT * \n\nFROM Join_1\n","incrementalKey":false,"incremental":{"expression":"true"}},"ports":{"inputs":[{"id":"KhJxbMlZ","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"Join_1"}],"outputs":[{"id":"G1DHpMzC","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"out"}],"isCustomOutputSchema":false}},"Reformat_2##rirv8doX":{"id":"Reformat_2##rirv8doX","component":"Reformat","metadata":{"label":"Reformat_2","x":320,"y":120,"phase":0,"macroDependencies":[]},"properties":{"columnsSelector":[],"expressions":[]},"ports":{"inputs":[{"id":"alHo0DFJ","schema":{"providerType":"Databricks","fields":[{"name":"id","dataType":{"type":"Integer"}},{"name":"first_name","dataType":{"type":"String"}},{"name":"last_name","dataType":{"type":"String"}}]},"slug":"in0"}],"outputs":[{"id":"BcnkRpkA","schema":{"providerType":"Databricks","fields":[{"name":"id","dataType":{"type":"Integer"}},{"name":"first_name","dataType":{"type":"String"}},{"name":"last_name","dataType":{"type":"String"}}]},"slug":"out"}],"isCustomOutputSchema":false}},"Join_1##sLfIaajY":{"id":"Join_1##sLfIaajY","component":"Join","metadata":{"label":"Join_1","x":720,"y":380,"phase":0,"macroDependencies":[]},"properties":{"conditions":[{"alias":"in1","expression":{"expression":"in0.c_tinyint = in1.c_tinyint"},"joinType":"INNER"}],"expressions":[{"expression":{"expression":"in0.c_tinyint"},"alias":"c_tinyint"},{"expression":{"expression":"in1.c_smallint"},"alias":"c_smallint"},{"expression":{"expression":"in0.c_int"},"alias":"c_int"},{"expression":{"expression":"in1.c_bigint"},"alias":"c_bigint"},{"expression":{"expression":"in0.c_float"},"alias":"c_float"},{"expression":{"expression":"in0.c_double"},"alias":"c_double"},{"expression":{"expression":"in0.c_string"},"alias":"c_string"},{"expression":{"expression":"in0.c_boolean"},"alias":"c_boolean"},{"expression":{"expression":"in0.c_array"},"alias":"c_array"},{"expression":{"expression":"in0.c_struct"},"alias":"c_struct"}],"activeTab":"conditions","columnsSelector":[],"headAlias":"in0"},"ports":{"inputs":[{"id":"mjkOok2G","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"in0"},{"id":"pwei9zIr","schema":{"providerType":"Databricks","fields":[{"name":"c_bool_expr","dataType":{"type":"Boolean"}},{"name":"c_concat_expr","dataType":{"type":"String"}},{"name":"c_add_expr","dataType":{"type":"Double"}},{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}},{"name":"c_macro","dataType":{"type":"String"}},{"name":"c_if","dataType":{"type":"String"}},{"name":"cfor_col_0","dataType":{"type":"String"}},{"name":"cfor_col_1","dataType":{"type":"String"}},{"name":"cfor_col_2","dataType":{"type":"String"}},{"name":"cfor_col_3","dataType":{"type":"String"}},{"name":"cfor_col_4","dataType":{"type":"String"}}]},"slug":"in1"}],"outputs":[{"id":"fMZaJt27","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"out"}],"isCustomOutputSchema":false}},"StunningOne##ZkCsqXtG":{"id":"StunningOne##ZkCsqXtG","component":"Reformat","metadata":{"label":"StunningOne","x":320,"y":480,"phase":0,"macroDependencies":["SQL_DatabricksSharedBasic.qa_concat_function_main"]},"properties":{"columnsSelector":["OoX8kRXz##c_tinyint","OoX8kRXz##c_smallint","OoX8kRXz##c_int","OoX8kRXz##c_bigint","OoX8kRXz##c_float","OoX8kRXz##c_double","OoX8kRXz##c_string","OoX8kRXz##c_boolean","OoX8kRXz##c_array","OoX8kRXz##c_struct"],"expressions":[{"expression":{"expression":"(1 != 2) or (true != NULL) or (NULL != NULL) or (1 < 2) or (2 <= 2) or (2 <=> 2) or ((2 % 1.8) == 1) or (to_date('2009-07-30 04:17:52') < to_date('2009-07-30 04:17:52')) or (add_months('2016-08-31', 1) < add_months('2017-08-31', 3)) or (true and false) or array_contains(array_distinct(array(1, 2, 3)), 2) or array_contains(array_except(array(1, 2, 3), array(1, 3, 5)), 2) or array_contains(array_intersect(array(1, 2, 3), array(1, 3, 5)), 10) or (array_join(array('hello', NULL, 'world'), ' ', ',') LIKE '%hello%') or (array_max(array(1, 20, NULL, 3)) > 10) or (array_min(array(1, 20, NULL, 3)) > 20) or array_contains(array_remove(array(1, 2, 3, NULL, 3), 3), 3) or array_contains(array_repeat(5, 2), 6) or array_contains(array_union(array(1, 2, 3), array(1, 3, 5)), 10) or arrays_overlap(array(1, 2, 3), array(3, 4, 5)) or (10 BETWEEN 2 and 20) or contains('Spark SQL', 'Spark') or endswith('Spark SQL', 'SQL') or (EXISTS (array(1, 2, 3), \nx -> x % 2 == 0)) or array_contains(filter(array(1, 2, 3), \nx -> x % 2 == 1), 5) or array_contains(flatten(array(array(1, 2), array(3, 4))), 10) or forall(array(1, 2, 3), \nx -> x % 2 == 0) or ilike('Spark', '_Park') or (1 IN (2, 3, 4)) or (isnan(CAST('NaN' AS double))) or isnotnull(1) or isnull(1) or array_contains(json_object_keys('{\"key\": \"value\"}'), 'key1') or like('Spark', '_park') or map_contains_key(map(1, 'a', 2, 'b'), 1) or map_contains_key(map_concat(map(1, 'a', 2, 'b'), map(3, 'c')), 4) or map_contains_key(map_filter(map(1, 0, 2, 2, 3, -1), \n(k, v) -> k > v), 3) or map_contains_key(map_from_arrays(array(1.0, 3.0), array('2', '4')), 2) or map_contains_key(map_from_entries(array(struct(1, 'a'), struct(2, 'b'))), 1) or array_contains(map_keys(map(1, 'a', 2, 'b')), 2) or array_contains(map_values(map(1, 'a', 2, 'b')), 'a') or map_contains_key(map_zip_with(map(1, 'a', 2, 'b'), map(1, 'x', 2, 'y'), \n(k, v1, v2) -> concat(v1, v2)), 1) or (named_struct('a', 1, 'b', 2) IN (named_struct('a', 1, 'b', 1), named_struct('a', 1, 'b', 3))) or (NOT true) or regexp('%SystemDrive%\\\\Users\\\\John', '%SystemDrive%\\\\\\\\Users.*') or array_contains(regexp_extract_all('100-200, 300-400', '(\\\\d+)-(\\\\d+)', 1), '100') or regexp_like('%SystemDrive%\\Users\\John', '%SystemDrive%\\\\Users.*') or (rlike('%SystemDrive%\\\\Users\\\\John', '%SystemDrive%\\\\\\\\Users.*')) or array_contains(sequence(1, 5), 4) or array_contains(shuffle(array(1, 20, 3, 5)), 10) or array_contains(slice(array(1, 2, 3, 4), 2, 2), 4) or array_contains(sort_array(array('b', 'd', NULL, 'c', 'a'), true), 'b') or array_contains(split('oneAtwoBthreeC', '[ABC]'), 'one') or startswith('Spark SQL', 'Spark') or map_contains_key(str_to_map('a:1,b:2,c:3', ',', ':'), 'a') or array_contains(transform(array(1, 2, 3), \nx -> x + 1), 1) or map_contains_key(transform_keys(map_from_arrays(array(1, 2, 3), array(1, 2, 3)), \n(k, v) -> k + 1), 1) or map_contains_key(transform_values(map_from_arrays(array(1, 2, 3), array(1, 2, 3)), \n(k, v) -> v + 1), 2) or array_contains(xpath('<a><b>b1</b><b>b2</b><b>b3</b><c>c1</c><c>c2</c></a>', 'a/b/text()'), 'a') or xpath_boolean('<a><b>1</b></a>', 'a/b') or array_contains(zip_with(array(1, 2), array(3, 4), \n(x, y) -> x + y), 1)"},"alias":"c_bool_expr"},{"expression":{"expression":"concat(aes_decrypt(unhex('83F16B2AA704794132802D248E6BFD4E380078182D1544813898AC97E709B28A94'), '0000111122223333'), base64(aes_encrypt('Spark SQL', '1234567890abcdef', 'ECB', 'PKCS')), bin(13), btrim('    SparkSQL   '), char(65), chr(65), concat('Spark', 'SQL'), concat_ws(' ', 'Spark', 'SQL'), crc32('Spark'), current_catalog(), current_database(), current_date(), current_timestamp(), current_timezone(), current_user(), date_add('2016-07-30', 1), date_sub('2016-07-30', 1), date_format('2016-04-08', 'y'), date_from_unix_date(1), date_part('YEAR', TIMESTAMP'2019-08-12 01:00:00.123456'), date_part('MONTH', INTERVAL '2021-11' YEAR TO MONTH), date_part('MINUTE', INTERVAL '123 23:55:59.002001' DAY TO SECOND), date_trunc('HOUR', '2015-03-05T09:32:05.359'), date_trunc('DD', '2015-03-05T09:32:05.359'), datediff('2009-07-31', '2009-07-30'), decode(encode('abc', 'utf-8'), 'utf-8'), e(), elt(1, 'scala', 'java'), format_number(12332.123456, '##################.###'), format_string('Hello World %d %s', 100, 'days'), CAST(from_csv('1, 0.8', 'a INT, b DOUBLE') AS string), CAST(from_json('{\"teacher\": \"Alice\", \"student\": [{\"name\": \"Bob\", \"rank\": 1}, {\"name\": \"Charlie\", \"rank\": 2}]}', 'STRUCT<teacher: STRING, student: ARRAY<STRUCT<name: STRING, rank: INT>>>') AS string), CAST(from_unixtime(0, 'yyyy-MM-dd HH:mm:ss') AS string), CAST(from_utc_timestamp('2016-08-31', 'Asia/Seoul') AS string), CAST(get_json_object('{\"a\":\"b\"}', '$.a') AS string), hash('Spark', array(123), 2), hex(17), CAST(hour('2009-07-30 12:58:59') AS string), CAST(hypot(3, 4) AS string), CAST(ilike('Spark', '_Park') AS string), CAST(initcap('sPark sql') AS string), CAST(last_day('2009-01-12') AS string), CAST(lcase('SparkSql') AS string), CAST(if(1 < 2, 'a', 'b') AS string), CAST(ifnull(NULL, array('2')) AS string), LEFT('Spark SQL', 3), lower('SparkSql'), lpad('hi', 5, '??'), ltrim('    SparkSQL   '), CAST(make_date(2013, 7, 15) AS string), CAST(make_dt_interval(1, 12, 30, 1.001001) AS string), CAST(make_interval(100, 11, 1, 1, 12, 30, 1.001001) AS string), CAST(make_timestamp(2019, 6, 30, 23, 59, 60) AS string), CAST(make_ym_interval(1, 2) AS string), md5('Spark'), next_day('2015-01-14', 'TU'), now(), nullif(2, 2), nvl(NULL, 'hello'), CAST(overlay('Spark SQL' PLACING '_' FROM 6) AS string), CAST(parse_url('http://spark.apache.org/path?query=1', 'HOST') AS string), printf('Hello World %d %s', 100, 'days'), CAST(regexp_extract('100-200', '(\\\\d+)-(\\\\d+)', 1) AS string), CAST(regexp_replace('100-200', '(\\\\d+)', 'num') AS string), repeat('123', 2), replace('ABCabc', 'abc', 'DEF'), reverse('Spark SQL'), RIGHT('Spark SQL', 3), rpad('hi', 5, '??'), rtrim('    SparkSQL   '), CAST(schema_of_json('[{\"col\":0}]') AS string), sha('Spark'), sha1('Spark'), sha2('Spark', 256), concat(space(2), '1'), split_part('11.12.13', '.', 3), substr('Spark SQL', 5), substring('Spark SQL', 5), substring_index('www.apache.org', '.', 2), timestamp_micros(1230219000123123), timestamp_millis(1230219000123), timestamp_seconds(1.230219000123E9), to_csv(named_struct('a', 1, 'b', 2)), to_date('2009-07-30 04:17:52'), to_timestamp('2016-12-31 00:12:00'), to_unix_timestamp('2016-04-08', 'yyyy-MM-dd'), to_utc_timestamp('2016-08-31', 'Asia/Seoul'), translate('AaBbCc', 'abc', '123'), trunc('2019-08-04', 'week'), try_to_binary('abc', 'utf-8'), try_to_number('454', '999'), typeof(1), ucase('SparkSql'), unbase64('U3BhcmsgU1FM'), decode(unhex('537061726B2053514C'), 'UTF-8'), unix_date(DATE(\"1970-01-02\")), unix_micros(TIMESTAMP('1970-01-01 00:00:01Z')), unix_millis(TIMESTAMP('1970-01-01 00:00:01Z')), unix_seconds(TIMESTAMP('1970-01-01 00:00:01Z')), unix_timestamp('2016-04-08', 'yyyy-MM-dd'), upper('SparkSql'), uuid(), xpath_string('<a><b>b</b><c>cc</c></a>', 'a/c'), xxhash64('Spark', array(123), 2), YEAR ('2016-07-30'))"},"alias":"c_concat_expr"},{"expression":{"expression":"(2 % 1.8) + (MOD(2, 1.8)) + (3 & 5) + (2 * 3) + (5 + 10) - (100 + 45) + (3 / 2) + (3 ^ 5) + abs(-1) + acos(1) + acosh(1) + array_position(array(3, 2, 1), 1) + array_size(array('b', 'd', 'c', 'a')) + ascii(2) + asin(0) + asinh(0) + atan(0) + atan2(0, 0) + atanh(0) + bit_count(0) + bit_get(11, 0) + bit_length('Spark SQL') + bround(25, -1) + cardinality(array('b', 'd', 'c', 'a')) + cardinality(map('a', 1, 'b', 2)) + CAST('10' AS int) + cbrt(27.0) + ceil(3.1411, 3) + ceiling(3.1411, 3) + char_length('Spark SQL ') + coalesce(NULL, 1, NULL) + conv('100', 2, 10) + cos(0) + cosh(0) + cot(1) + csc(1) + day('2009-07-30') + dayofmonth('2009-07-30') + dayofweek('2009-07-30') + dayofyear('2016-04-09') + degrees(3.141592653589793) + element_at(array(1, 2, 3), 2) + exp(0) + expm1(0) + EXTRACT(SECONDS FROM TIMESTAMP'2019-10-01 00:00:01.000001') + EXTRACT(MINUTE FROM INTERVAL '123 23:55:59.002001' DAY TO SECOND) + factorial(2) + find_in_set('ab', 'abc,b,ab,c,def') + floor(-0.1) + getbit(11, 0) + greatest(10, 9, 2, 4, 3) + instr('SparkSQL', 'SQL') + json_array_length('[1,2,3,{\"f1\":1,\"f2\":[5,6]},4]') + least(10, 9, 2, 4, 3) + length('Spark SQL ') + levenshtein('kitten', 'sitting') + ln(10) + locate('bar', 'foobarbar') + log(10, 100) + log10(10) + log1p(0) + log2(2) + minute('2009-07-30 12:58:59') + (2 % 1.8) + month('2016-07-30') + months_between('1997-02-28 10:30:00', '1996-10-30', false) + nanvl(CAST('NaN' AS double), 123) + negative(100) + nvl2(NULL, 2, 1) + octet_length('Spark SQL') + pi() + pmod(10, 3) + position('bar', 'foobarbar') + positive(1) + pow(2, 3) + power(2, 3) + quarter('2016-08-31') + radians(180) + rand() + randn() + random() + rint(12.3456) + round(2.5, 0) + sec(0) + second('2009-07-30 12:58:59') + shiftleft(2, 1) + shiftright(4, 1) + shiftrightunsigned(4, 1) + sign(40) + signum(40) + sin(0) + sinh(0) + size(array('b', 'd', 'c', 'a')) + sqrt(4) + tan(0) + tanh(0) + to_number('454.00', '000.00') + try_add(1, 2) + try_divide(2L, 2L) + try_element_at(array(1, 2, 3), 2) + try_multiply(2, 3) + try_subtract(2, 1) + weekday('2009-07-30') + weekofyear('2008-02-20') + (CASE\n  WHEN 1 > 0\n    THEN 1\n  WHEN 2 > 0\n    THEN 2.0\n  ELSE 1.2\nEND) + width_bucket(5.3, 0.2, 10.6, 5) + xpath_double('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_int('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_long('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_number('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + xpath_short('<a><b>1</b><b>2</b></a>', 'sum(a/b)') + (~ 0)"},"alias":"c_add_expr"},{"expression":{"expression":"c_tinyint"},"alias":"c_tinyint"},{"expression":{"expression":"c_smallint"},"alias":"c_smallint"},{"expression":{"expression":"c_int"},"alias":"c_int"},{"expression":{"expression":"c_bigint"},"alias":"c_bigint"},{"expression":{"expression":"c_float"},"alias":"c_float"},{"expression":{"expression":"c_double"},"alias":"c_double"},{"expression":{"expression":"c_string"},"alias":"c_string"},{"expression":{"expression":"c_boolean"},"alias":"c_boolean"},{"expression":{"expression":"c_array"},"alias":"c_array"},{"expression":{"expression":"c_struct"},"alias":"c_struct"},{"expression":{"expression":"{{ SQL_DatabricksSharedBasic.qa_concat_function_main('c_string', 'c_boolean') }}"},"alias":"c_macro"},{"rowType":"ifGroup","children":[{"rowType":"if","condition":{"expression":"v_int > 0 or             var('v_project_dict')['a'] > 10"},"children":[{"expression":{"expression":"concat(c_string, c_float)"},"alias":"c_if"}]},{"rowType":"elseIf","condition":{"expression":"v_dict['a'] > 10 or             var('v_project_dict')['b'] == 'hello'"},"children":[{"expression":{"expression":"concat(c_string, c_int)"},"alias":"c_if"}]},{"rowType":"else","children":[{"expression":{"expression":"concat(c_string, c_bigint)"},"alias":"c_if"}]}]},{"rowType":"for","variable":{"expression":"c_i"},"iterable":{"expression":"range(0, 5)"},"children":[{"expression":{"expression":"concat(c_string, {{c_i}})"},"alias":"cfor_col_{{c_i}}"}]}]},"ports":{"inputs":[{"id":"OoX8kRXz","schema":{"providerType":"Databricks","fields":[{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}}]},"slug":"in0"}],"outputs":[{"id":"simMCecf","schema":{"providerType":"Databricks","fields":[{"name":"c_bool_expr","dataType":{"type":"Boolean"}},{"name":"c_concat_expr","dataType":{"type":"String"}},{"name":"c_add_expr","dataType":{"type":"Double"}},{"name":"c_tinyint","dataType":{"type":"TinyInt"}},{"name":"c_smallint","dataType":{"type":"SmallInt"}},{"name":"c_int","dataType":{"type":"Integer"}},{"name":"c_bigint","dataType":{"type":"Bigint"}},{"name":"c_float","dataType":{"type":"Float"}},{"name":"c_double","dataType":{"type":"Float"}},{"name":"c_string","dataType":{"type":"String"}},{"name":"c_boolean","dataType":{"type":"Boolean"}},{"name":"c_array","dataType":{"type":"Array","dataType":{"type":"String"}}},{"name":"c_struct","dataType":{"type":"Struct","fields":[{"name":"city","dataType":{"type":"String"}},{"name":"state","dataType":{"type":"String"}},{"name":"pin","dataType":{"type":"Bigint"}}]}},{"name":"c_macro","dataType":{"type":"String"}},{"name":"c_if","dataType":{"type":"String"}},{"name":"cfor_col_0","dataType":{"type":"String"}},{"name":"cfor_col_1","dataType":{"type":"String"}},{"name":"cfor_col_2","dataType":{"type":"String"}},{"name":"cfor_col_3","dataType":{"type":"String"}},{"name":"cfor_col_4","dataType":{"type":"String"}}]},"slug":"out"}],"isCustomOutputSchema":false}}},"connections":[{"id":"fqRApEr9","source":"env_uitesting_shared_parent_model_1##rGJWQY6v","sourcePort":"hB148f93","target":"StunningOne##ZkCsqXtG","targetPort":"OoX8kRXz"},{"id":"mnSMQl4K","source":"StunningOne##ZkCsqXtG","sourcePort":"simMCecf","target":"Limit_1##NFPelaWG","targetPort":"QleFxndB"},{"id":"M6SZTwJo","source":"env_uitesting_shared_parent_model_1##rGJWQY6v","sourcePort":"hB148f93","target":"SQLStatement_1##g8AOf2ZC","targetPort":"hXdPMEyu"},{"id":"HwKsDUVD","source":"SQLStatement_1##g8AOf2ZC","sourcePort":"CyMhxKGt","target":"Join_1##sLfIaajY","targetPort":"mjkOok2G"},{"id":"PUW9JJsC","source":"Limit_1##NFPelaWG","sourcePort":"FK7MhYBZ","target":"Join_1##sLfIaajY","targetPort":"pwei9zIr"},{"id":"p9uCGnyk","source":"raw_customers##Nj8Lrz3U","sourcePort":"a4xzYLni","target":"Reformat_2##rirv8doX","targetPort":"alHo0DFJ"},{"id":"Ug8FALCL","source":"Join_1##sLfIaajY","sourcePort":"fMZaJt27","target":"env_uitesting_shared_mid_model_1##CSwD6x9x","targetPort":"KhJxbMlZ"}],"component":"Model"}