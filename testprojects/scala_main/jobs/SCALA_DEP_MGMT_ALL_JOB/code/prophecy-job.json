{
  "metainfo" : {
    "type" : "Databricks",
    "fabricId" : "299",
    "jobId" : "jobs/SCALA_DEP_MGMT_ALL_JOB",
    "name" : "SCALA_DEP_MGMT_ALL_JOB",
    "schedule" : "0 0 0 * * ? *",
    "jobClusterMode" : {
      "clusterMode" : "Single"
    },
    "enabled" : true,
    "defaultClusterSize" : "small",
    "alerting" : {
      "emails" : "abhisheks@simpledatalabs.com",
      "onStart" : false,
      "onSuccess" : true,
      "onFailure" : true
    },
    "processDefaultSettings" : {
      "type" : "Inherited",
      "retries" : 1,
      "alerting" : {
        "emails" : "abhisheks@simpledatalabs.com",
        "onStart" : false,
        "onSuccess" : true,
        "onFailure" : true
      }
    },
    "availableFabrics" : [ {
      "id" : "2335",
      "name" : "FabricAutomatedADVJobSize",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "small2", "small3", "adv-json1", "adv-json2" ]
      }
    }, {
      "id" : "2330",
      "name" : "FabricAutomatedEBS",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "small2", "small3" ]
      }
    }, {
      "id" : "917",
      "name" : "ebs_ssd",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "new-job.size" ]
      }
    }, {
      "id" : "2135",
      "name" : "dev_azure",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "medium" ]
      }
    }, {
      "id" : "1901",
      "name" : "newfabric",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "newjobsize-1.1" ]
      }
    }, {
      "id" : "2080",
      "name" : "dev_gcp",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "medium" ]
      }
    }, {
      "id" : "2338",
      "name" : "TEST-Automated_Databricks1",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "adv-json1", "adv-json2", "small2" ]
      }
    }, {
      "id" : "2327",
      "name" : "SingleCluster_1",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "adv-json1", "adv-json2" ]
      }
    }, {
      "id" : "2349",
      "name" : "GCP-TEST_Automated",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "adv-json1" ]
      }
    }, {
      "id" : "1962",
      "name" : "dev_11rt",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "adv-json1" ]
      }
    }, {
      "id" : "2326",
      "name" : "JobFabricMain_1",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "adv-json1", "adv-json2" ]
      }
    }, {
      "id" : "299",
      "name" : "dev",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small", "medium", "adv-json1", "adv-json2" ]
      }
    }, {
      "id" : "1770",
      "name" : "dev1",
      "clusterSizes" : {
        "default" : "Small",
        "availableClusterSizes" : [ "Small" ]
      }
    }, {
      "id" : "2068",
      "name" : "dev_shared",
      "clusterSizes" : {
        "default" : "small",
        "availableClusterSizes" : [ "small" ]
      }
    } ]
  },
  "processes" : {
    "2q8aaiwdBZUDz1Jm0acgy" : {
      "id" : "2q8aaiwdBZUDz1Jm0acgy",
      "component" : "Pipeline",
      "metadata" : {
        "label" : "SCALA_DEP_MGMT_ALL",
        "slug" : "SCALA_DEP_MGMT_ALL",
        "x" : 100,
        "y" : 100
      },
      "ports" : {
        "inputs" : [ {
          "id" : "in"
        } ],
        "outputs" : [ {
          "id" : "out"
        } ]
      },
      "settings" : {
        "type" : "Inherited",
        "alerting" : {
          "emails" : "",
          "onStart" : false,
          "onSuccess" : false,
          "onFailure" : false
        }
      },
      "properties" : {
        "pipelineId" : "pipelines/SCALA_DEP_MGMT_ALL",
        "configurations" : {
          "schema" : [ {
            "name" : "JDBC_USER",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "test_user"
            }
          }, {
            "name" : "SOURCE_TABLE",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "test_table"
            }
          }, {
            "name" : "db_secrets",
            "optional" : true,
            "kind" : {
              "type" : "databricks_secret",
              "value" : "qasecrets_mysql:username"
            }
          }, {
            "name" : "JDBC_URL",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "jdbc:mysql://18.144.156.219:3306/test_database"
            }
          }, {
            "name" : "JDBC_SOURCE_TABLE",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "test_table"
            }
          }, {
            "name" : "CONFIG_STR",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "jdbc_url-${JDBC_URL}"
            }
          }, {
            "name" : "CONFIG_BOOLEAN",
            "optional" : false,
            "kind" : {
              "type" : "boolean",
              "value" : "true"
            }
          }, {
            "name" : "CONFIG_DOUBLE",
            "optional" : false,
            "kind" : {
              "type" : "double",
              "value" : "123123.12321321"
            }
          }, {
            "name" : "CONFIG_INT",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "3243423"
            }
          }, {
            "name" : "CONFIG_FLOAT",
            "optional" : false,
            "kind" : {
              "type" : "float",
              "value" : "3454.34534"
            }
          }, {
            "name" : "c_limit_11",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "11"
            }
          }, {
            "name" : "c_st_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "concat(`c_struct-c_short`, `c_struct-c_decimal`)"
            }
          }, {
            "name" : "c_st_long",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "c_array_long"
            }
          }, {
            "name" : "c_st_rename",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "c_array_boolean_renamed"
            }
          }, {
            "name" : "c_dedup_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "concat(c_array_float, `c_array_int`)"
            }
          }, {
            "name" : "c_dedup_col",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : " c_array_date"
            }
          }, {
            "name" : "c_rd_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "`c -  boolean _  ` in (true,false)"
            }
          }, {
            "name" : "c_12321",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "12321"
            }
          }, {
            "name" : "c_0",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "0"
            }
          }, {
            "name" : "c_1",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "1"
            }
          }, {
            "name" : "c_join_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "in0.`-- c-long`=in1.`-- c-long`"
            }
          }, {
            "name" : "c_join_cshort",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "in0.`c   short  --`"
            }
          }, {
            "name" : "c_orderby_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "concat(`c  date`, c_timestamp)"
            }
          }, {
            "name" : "c_orderby_int",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "`c-int-column type`"
            }
          }, {
            "name" : "c_filter_expression",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "customer_id >5"
            }
          }, {
            "name" : "c_reformat_complex",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "case     when c_int > 10 then         case              when NOT (NOT (c_string like '%1%')) then 'A'             when NOT (NOT (trim(trim(c_string)) = '')) then 'B'             else 'X'         end     when c_int <= 10 then         case             when NOT (NOT (c_string like '%1%')) then 'C'             when NOT (NOT (c_string not like '%2%')) then 'D'             else 'Z'         end     else null end"
            }
          }, {
            "name" : "c_repartition_colname",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "`c_float-__  `"
            }
          }, {
            "name" : "c_repartition_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "concat(`c  - int`, `c_struct -- _  `.`c_string - of a struct -- _`)"
            }
          }, {
            "name" : "c_agg_expr",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "first(c1)"
            }
          }, {
            "name" : "c_agg_group",
            "optional" : false,
            "kind" : {
              "type" : "spark_expression",
              "value" : "concat(c1, c2, c3)"
            }
          }, {
            "name" : "c_agg_c3",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "c3"
            }
          }, {
            "name" : "c_row",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "row_number()"
            }
          }, {
            "name" : "c_bool",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "`c -  boolean _  `"
            }
          }, {
            "name" : "c_short",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "`c- short`"
            }
          }, {
            "name" : "c_sql_expr",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "%[^aeiou]@%"
            }
          }, {
            "name" : "c_sql_c8c1",
            "optional" : false,
            "kind" : {
              "type" : "int",
              "value" : "-1"
            }
          }, {
            "name" : "c_regex1",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "^[_A-Za-z0-9-]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})"
            }
          }, {
            "name" : "c_regex2",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "((?=.*)(?=.*[a-z$$])(?=.*[A-Z])(?=.*[@#%]).{6,20})"
            }
          }, {
            "name" : "c_str",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "stringwith$$one#%^&*()-=!@#"
            }
          }, {
            "name" : "c_new_sqlexpr",
            "optional" : false,
            "kind" : {
              "type" : "string",
              "value" : "select * from in0 where cast(SUBSTRING(in0.c9_udf1_c2, 1,2) as int) > -1"
            }
          } ],
          "instances" : [ "default", "test-instance1", "test-instance2", "dev_11rt", "newfabric", "ebs_ssd", "test-instance3", "dev1", "dev", "captain_livy" ],
          "overrides" : { },
          "selectedInstance" : "default"
        }
      }
    }
  },
  "connections" : [ ]
}